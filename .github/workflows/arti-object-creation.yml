name: Create Artifactory Objects

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:

jobs:
  build:
    if: contains(github.event.issue.labels.*.name, 'arti-repo')
    runs-on: mylaptop

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Parse the Issue
        run: |
          echo "${{ github.event.issue.body}}" > ${{ github.workspace }}/issue.body.txt
          ISSUEFILE=${{ github.workspace }}/issue.body.txt
          GITHUB_REPO1=`cat $ISSUEFILE | grep github.repo | cut -d'=' -f2`
          echo $GITHUB_REPO1
          ARTI_REPO_TYPE=`cat $ISSUEFILE | grep arti.repo.type | cut -d'=' -f2`
          echo $ARTI_REPO_TYPE
          ARTI_REPO_PKG=`cat $ISSUEFILE | grep arti.repo.package | cut -d'=' -f2`
          echo $ARTI_REPO_PKG
          ARTI_REPO_NAME=`echo "$GITHUB_REPO1-$ARTI_REPO_PKG-$ARTI_REPO_TYPE"`
          echo $ARTI_REPO_NAME
      - name: Get Users from the repo
        run: |
          echo $GITHUB_REPO1
          curl -XGET -H "Authorization: token ${{ secrets.GH_ADMIN_TOKEN }}" https://api.github.com/repos/np-reddy/$GITHUB_REPO1/collaborators | jq -r '.[] | .login as $u | .permissions | ([$u, .admin, .maintain, .push, .triage, .pull] | @csv)' | tr -d '"' > github.users.map
          while read users
          do
          echo $users | cut -d',' -f1 >> github.users.out
          USER=`echo $users | cut -d',' -f1`
          ADMIN=`echo $users | cut -d',' -f2`
          WRITE=`echo $users | cut -d',' -f4`
          if [ $ADMIN = "true" ]
          then
          echo "$USER" >> admins.out
          elif [ $WRITE = "true" ]
          then
          echo "$USER" >> writers.out
          else
          echo "$USER" >> readers.out
          fi
          done < github.users.map
        
