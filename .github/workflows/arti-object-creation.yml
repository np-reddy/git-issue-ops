name: Create Artifactory Objects

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:

jobs:
  build:
    if: contains(github.event.issue.labels.*.name, 'arti-repo')
    # runs-on: mylaptop
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Parse the Issue
        run: |
          echo "${{ github.event.issue.body}}" > ${{ github.workspace }}/issue.body.txt
          ISSUEFILE=${{ github.workspace }}/issue.body.txt
          GITHUB_REPO1=`cat $ISSUEFILE | grep github.repo | cut -d'=' -f2 | tr -d '\r'`
          echo $GITHUB_REPO1 > github-repo
          ARTI_REPO_TYPE=`cat $ISSUEFILE | grep arti.repo.type | cut -d'=' -f2 | tr -d '\r'`
          echo $ARTI_REPO_TYPE > arti-repo-type
          ARTI_REPO_PKG=`cat $ISSUEFILE | grep arti.repo.package | cut -d'=' -f2 | tr -d '\r'`
          echo $ARTI_REPO_PKG > art-pkg-type
          ARTI_REPO_NAME=$GITHUB_REPO1-$ARTI_REPO_PKG-$ARTI_REPO_TYPE
          echo $ARTI_REPO_NAME > arti-repo-name
          curl -XGET -H "Authorization: token ${{ secrets.GH_ADMIN_TOKEN }}" https://api.github.com/repos/np-reddy/$GITHUB_REPO1/collaborators | jq -r '.[] | .login as $u | .permissions | ([$u, .admin, .maintain, .push, .triage, .pull] | @csv)' | tr -d '"' > github.users.map
          while read users
          do
          echo $users | cut -d',' -f1 >> github.users.out
          USER=`echo $users | cut -d',' -f1`
          ADMIN=`echo $users | cut -d',' -f2`
          WRITE=`echo $users | cut -d',' -f4`
          if [ $ADMIN = "true" ]
          then
          echo "$USER" >> admins.out
          elif [ $WRITE = "true" ]
          then
          echo "$USER" >> writers.out
          else
          echo "$USER" >> readers.out
          fi
          done < github.users.map
      - name: Set JFrog CLI
        uses: jfrog/setup-jfrog-cli@v1
        env:
          JF_ARTIFACTORY_SERVER: ${{ secrets.JF_ARTIFACTORY_SERVER_1 }}
      - name: create Artifactory objects
        run: |
          cp artifactory-templates/user-template.csv arti-user.csv
          awk '{print "\""$0"\",\"Pwd1@"$0"\",\""$0"@dummy.com\""}' github.users.out >> arti-user.csv
          jfrog rt uc --csv arti-user.csv
          # jfrog rt udel --csv arti-user.csv --quiet
          GITHUB_REPO1=`cat github-repo`
          ARTI_REPO_NAME=`cat arti-repo-name`
          ARTI_REPO_TYPE=`cat arti-repo-type`
          ARTI_REPO_PKG=`cat art-pkg-type`
          
          jfrog rt gc $GITHUB_REPO1-readers
          while read reader; do jfrog rt gau $GITHUB_REPO1-readers $reader ; done < readers.out 
          jfrog rt gc $GITHUB_REPO1-writers
          while read writer; do jfrog rt gau $GITHUB_REPO1-writers $writer ; done < writers.out
          jfrog rt gc $GITHUB_REPO1-admins
          while read admin; do jfrog rt gau $GITHUB_REPO1-admins $admin ; done < admins.out
          jfrog rt rc artifactory-templates/repo-template-local.json --vars "repo-name=$ARTI_REPO_NAME;pkg-type=ARTI_REPO_PKG"
          jfrog rt ptc artifactory-templates/permission-target-template.json --vars "PERM_NAME=$GITHUB_REPO1-perm;ARTI_REPO_NAME=$ARTI_REPO_NAME;GITHUB_REPO1=$GITHUB_REPO1"      
          
          
          
          
          
         
        
